name: Versioning

on:
  push:
    branches: 
      - master
    paths-ignore:
      - 'resources/version.txt'

jobs:
  bump-patch:
    name: "Bump Patch"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            token: ${{ secrets.ACTION_PAK }}

      - name: Install tree
        run: sudo apt-get install tree

      - name: Print tree
        run: tree -C

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: pip install bump2version

      - name: Get current version
        id: get-version
        run: |
          echo "::set-output name=version::$(cat resources/version.txt)"
        shell: bash
      
      - name: Print old version
        run: echo "${{ steps.get-version.outputs.version }}"

      - name: Bump patch
        run: bump2version --current-version ${{ steps.get-version.outputs.version }} patch resources/version.txt
      
      - name: Get new version
        id: get-nversion
        run: |
          echo "::set-output name=nversion::$(cat resources/version.txt)"
        shell: bash

      - name: Print new version
        run: echo "${{ steps.get-version.outputs.version }}"

      - name: Set up identity
        run: |
          git config --global user.email "thomas.battenfeld@gmail.com"
          git config --global user.name "Version Bot"

      - name: Stage changed files
        run: git add .

      - name: Commit changed files
        run: git commit -m "[Bot] Auto updating version to ${{ steps.get-nversion.outputs.nversion }}"

      - name: Fetch from master
        run: git fetch origin master

      - name: Push code to master
        run: git push -f origin HEAD:master


  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    needs: bump-patch
    steps:

      - uses: actions/checkout@v2

    - name: Get new version
        id: get-nversion
        run: |
          echo "::set-output name=nversion::$(cat resources/version.txt)"
        shell: bash

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build ${{ steps.get-nversion.outputs.nversion }}"
          files: |
            LICENSE
